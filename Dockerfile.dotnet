ARG BASE_IMAGE="derskythe/runner-base-slim:latest"
FROM ${BASE_IMAGE} AS base
# hadolint ignore=DL3007

ARG GH_RUNNER_VERSION='2.303.0'
ARG RUNNER_DIR="/actions-runner"
ENV RUNNER_DIR=${RUNNER_DIR}
ARG CACHE_HOSTED_TOOLS_DIRECTORY="${RUNNER_DIR}/hostedtoolcache"
ENV CACHE_HOSTED_TOOLS_DIRECTORY=${CACHE_HOSTED_TOOLS_DIRECTORY}
ARG CHOWN_USER="runner"
ARG TARGETARCH
ARG DISTRO
ARG DISTRO_VERSION

# SDK version
ENV DOTNET_VERSION='6.0'
ENV PWSH_VERSION='7.3.3'
ENV NUGET_PACKAGES=${CACHE_HOSTED_TOOLS_DIRECTORY}/nuget-packages
ENV DOTNET_GENERATE_ASPNET_CERTIFICATE=false
ENV DOTNET_NOLOGO=true
ENV NUGET_XMLDOC_MODE=skip

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

WORKDIR ${RUNNER_DIR}
COPY --chmod=777 *.sh .
#RUN set -o pipefail
RUN unset ASPNETCORE_URLS  \
    && mkdir -p ${NUGET_PACKAGES} /_work /usr/share/pwsh  \
    && wget -qO- "https://dot.net/v1/dotnet-install.sh" | bash /dev/stdin --channel LTS --runtime aspnetcore --install-dir /usr/share/dotnet \
    && (echo "export DOTNET_ROOT=/usr/share/dotnet" >> /etc/profile )  \
    && (echo "export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/shared" >> /etc/profile ) \
    && (echo "export DOTNET_ROOT=/usr/share/dotnet" >> ~/.bashrc )  \
    && ( echo "export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/shared" >> ~/.bashrc)  \
    && TARGET_ARCH=$(echo ${TARGETARCH} | sed 's/amd/x/' ) \
    && wget -qO- "https://github.com/PowerShell/PowerShell/releases/download/v${PWSH_VERSION}/powershell-${PWSH_VERSION}-linux-$TARGET_ARCH.tar.gz" | tar xz -C /usr/share/pwsh  \
    && ln -s /usr/share/pwsh/pwsh /usr/bin/pwsh  \
    && wget -qO- "https://github.com/actions/runner/releases/download/v${GH_RUNNER_VERSION}/actions-runner-linux-$TARGET_ARCH-${GH_RUNNER_VERSION}.tar.gz" | tar xz \
    && ./bin/installdependencies.sh \
    && rm -Rf install_actions.sh ./externals/node12_alpine ./externals/node12 /var/lib/apt/lists/* /tmp/*

ENTRYPOINT ["./entrypoint.sh"]
CMD ["./bin/Runner.Listener", "run", "--startuptype", "service"]

#