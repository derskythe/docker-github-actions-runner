name: Reusable build and push
on:
  workflow_call:
    inputs:
      env_vars:
        required: true
        type: string
    secrets:
      token:
        required: true
      docker-user:
        required: true
      docker-token:
        required: true

env:
  GH_REGISTRY: ghcr.io

permissions:
  contents: write
  packages: write

jobs:
  build-n-push:
    runs-on: ubuntu-latest
    name: Build and push
    defaults:
      run:
        shell: bash
    permissions:
      contents: read
      packages: write
    env:
      FULL_TAG: ""
      REPOSITORY_OWNER: ""
      RELEASE_IMAGE_NAME: ""
      BASE_BUILD_IMAGE: ""
      REVISION: ""
      TAG_PREFIX: ""
      DOCKERFILE: ""
      MATRIX_DISTRO: ""
      MATRIX_CODENAME: ""
      CHOWN_USER: ""
      MATRIX_VERSION: ""
      MATRIX_DOCKER_CODENAME: ""
      PLATFORMS: ""
      IMAGE_LIST: ""
    steps:
      - name: Format matrix
        run: |
          for i in "${{ inputs.env_vars }}"
          do
            printf "%s\n" $i >> $GITHUB_ENV
          done
      - name: Copy Repo Files
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          labels: |
            org.opencontainers.image.name=${{ github.REPOSITORY_OWNER }}/${{ env.RELEASE_IMAGE_NAME }}
            org.opencontainers.image.version=${{ env.FULL_TAG }}
            org.opencontainers.image.base.name=${{ env.BASE_BUILD_IMAGE }}
            org.opencontainers.image.revision=${{ env.REVISION }}
            org.opencontainers.image.licenses=MIT
          images: ${{ env.IMAGE_LIST }}
          flavor: |
            latest=false
            prefix=
            suffix=
          tags: |
            type=raw,value=${{ env.FULL_TAG }},enable=true
            type=raw,value=${{ env.TAG_PREFIX }},enable=true

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          provenance: true
          sbom: true
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_IMAGE=${{ env.BASE_BUILD_IMAGE }}
            CHOWN_USER=${{ env.CHOWN_USER }}
            LSB_RELEASE_CODENAME=${{ env.MATRIX_CODENAME }}
            DOCKER_CODENAME=${{ env.MATRIX_DOCKER_CODENAME }}
            DISTRO=${{ env.MATRIX_DISTRO }}
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
