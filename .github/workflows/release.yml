name: GitHub Actions Runner in Docker - Release
# Manual trigger
on: workflow_dispatch
#on:
#  push:
#    tags:
#      - '*'

env:
  IMAGE_NAME: github-runner
  BASE_IMAGE: github-runner-base
  CHOWN_USER: runner

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create Release
    runs-on: [ self-hosted, linux ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build_latest:
    runs-on: [ self-hosted, linux ]
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [
          {tag: "ubuntu-jammy", distro: "ubuntu", codename: "jammy", extra: ""},
          {tag: "ubuntu-focal", distro: "ubuntu", codename: "focal",  extra: "latest"},
          {tag: "ubuntu-bionic", distro: "ubuntu", codename: "bionic",  extra: ""},
          {tag: "debian-bullseye", distro: "ubuntu", codename: "bullseye",  extra: ""},
          {tag: "debian-sid", distro: "ubuntu", codename: "sid",  extra: ""}
        ]
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@v3
      - name: get version
        run: echo 'TAG='${GITHUB_REF#refs/tags/} >> $GITHUB_ENV
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          pull: true
          push: true
          build-args: |
            BUILD_IMAGE="${{ env.ORG }}/${{ env.BASE_IMAGE }}:${{ matrix.distro }}-${{ matrix.codename }}"
            CHOWN_USER="${{ env.CHOWN_USER }}"
          tags: |
            ${{ env.ORG }}/${{ env.IMAGE_NAME }}:${{ matrix.tag }}
            ${{ env.ORG }}/${{ env.IMAGE_NAME }}:${{ matrix.extra }}
            ghcr.io/${{ github.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ matrix.tag }}
            ghcr.io/${{ github.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ matrix.extra }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          platforms: linux/amd64 #,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max