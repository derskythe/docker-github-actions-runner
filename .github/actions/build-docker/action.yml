---
name: "Action build image"
description: "Number of steps to build and deploy image"
author: "DerSkythe"
branding:
  icon: 'layers'
  color: 'blue'

inputs:
  full_tag:
    description: 'full_tag'
    required: true
  repository_owner:
    description: 'repository_owner'
    required: true
  release_image_name:
    description: 'release_image_name'
    required: true
  base_build_name:
    description: 'base_build_name'
    required: true
  base_build_image:
    description: 'base_build_image'
    required: true
  revision:
    description: 'revision'
    required: true
  tag_prefix:
    description: 'tag_prefix'
    required: true
  dockerfile:
    description: 'dockerfile'
    required: true
  matrix_distro:
    description: 'matrix_distro'
    required: true
  matrix_codename:
    description: 'matrix_codename'
    required: true
  matrix_version:
    description: 'matrix_version'
    required: true
  matrix_docker_codename:
    description: 'matrix_docker_codename'
    required: true
  chown_user:
    description: 'chown_user'
    required: true
  docker_user:
    description: 'Secret'
    required: true
  docker_token:
    description: 'Secret'
    required: true
  gh_token:
    description: 'Secret'
    required: true
  platforms:
    description: 'platforms'
    required: true
  image_list:
    description: 'image_list'
    required: true
# outputs:
#   random-number:
#     description: "Random number"
#     value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    # - name: Prints vars
    #   shell: bash
    #   run: |
    #     echo '${{ toJson(env) }}'
    #     echo '${{ toJson(inputs) }}'
    #     echo '${{ toJson(github) }}'
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker_user }}
        password: ${{ inputs.docker_token }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ inputs.docker_user }}
        password: ${{ inputs.gh_token }}
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        labels: |
          org.opencontainers.image.name=${{ inputs.release_image_name }}
          org.opencontainers.image.version=${{ inputs.full_tag }}
          org.opencontainers.image.base.name=${{ inputs.base_build_image }}
          org.opencontainers.image.revision=${{ inputs.revision }}
          org.opencontainers.image.licenses=MIT
        images: ${{ inputs.image_list }}
        flavor: |
          latest=false
          prefix=
          suffix=
        tags: |
          type=raw,value=${{ inputs.full_tag }},enable=true
          type=raw,value=${{ inputs.tag_prefix }},enable=true
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        provenance: true
        sbom: true
        pull: true
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_IMAGE=${{ inputs.base_build_image }}
          CHOWN_USER=${{ inputs.chown_user }}
          LSB_RELEASE_CODENAME=${{ inputs.matrix_docker_codename }}
          DOCKER_CODENAME=${{ inputs.matrix_docker_codename }}
          DISTRO=${{ inputs.matrix_distro }}
          DISTRO_VERSION=${{ inputs.matrix_version }}
          VERSION=${{ env.DOCKER_METADATA_OUTPUT_VERSION }}
          REVISION=${{ inputs.revision }}
        platforms: ${{ inputs.platforms }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
# BASE_IMAGE
# DISTRO_VERSION
# GH_RUNNER_VERSION
