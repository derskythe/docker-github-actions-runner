---
name: "Process URL list of dependencies"
description: "Process URL list of dependencies and make env files if necessary"
author: "DerSkythe"
branding:
  icon: 'flag'
  color: 'yellow'

inputs:
  config_file:
    description: 'Path to JSON'
    required: true
  output_prefix:
    description: 'Directory to save env files'
    required: true
  platforms:
    description: 'List of required platforms'
    required: true
  gh_version:
    description: 'Version of GitHub Action Runner'
    required: true
  gh_token:
    description: 'Secret token of GitHub account'
    required: true
outputs:
    version:
      description: "Latest version of GitHub Action Runner"
      value: ${{ steps.prepare-for-output.outputs.version }}
runs:
  using: composite
  steps:
    - name: Copy Repo Files
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    
    - name: Check deps for update
      id: run-check-for-updates
      shell: pwsh
      # return env.FILES_CHANGED, env.NEW_VERSION
      # outputs:
      #   gh_runner_new_version: ${{ steps.run-check-for-updates.outputs.gh_runner_new_version }}
      #   files_changed: ${{ steps.run-check-for-updates.outputs.files_changed }}
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
        CONFIG_FILE: ${{ inputs.config_file }}
        OUTPUT_PREFIX: ${{ inputs.output_prefix }}
        PLATFORMS: ${{ inputs.platforms }}
      run: |
        ./.github/helpers/process-urls.ps1 -JsonFile ${{ env.CONFIG_FILE }} -OutputPrefix ${{ env.OUTPUT_PREFIX }} -Platforms ${{ env.PLATFORMS }} | %{ Write-Output($_) >> $Env:GITHUB_OUTPUT }

    - name: Commit if updated
      id: commit-if-updated
      if: ${{ success() && steps.run-check-for-updates.outputs.files_changed == 1 }}
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
        NEW_VERSION: ${{ steps.run-check-for-updates.outputs.gh_runner_new_version }}
        LOG_VERSION: ${{ steps.run-check-for-updates.outputs.log_version }}
      shell: pwsh
      # outputs:
      #   gh_runner_new_version: ${{ steps.run-check-for-updates.outputs.gh_runner_new_version }}
      #   update_counter: ${{ steps.run-check-for-updates.outputs.update_counter }}
      run: |
        git pull
        $Listed = (git branch -ar --no-color --no-column --list '*update/deps-*')
        Write-Host $Listed
        $LastBranchNumber = $Listed | % {($_ -replace '[^\d]', '') -as [int]} | Sort-Object -Descending | Select-Object -Index 0
        Write-Host $LastBranchNumber
        $LastBranchNumber = $LastBranchNumber -gt 0 ? $LastBranchNumber + 1 : 1
        Write-Host $LastBranchNumber
        git config user.name github-actions
        git config user.email github-actions@github.com
        $BranchName = "update/deps-$($LastBranchNumber)"
        git checkout -b $BranchName
        git add .
        $Body = ('{0}' -f ($env:LOG_VERSION -replace ';', "`n"))
        git commit -m @"
        $Body
        "@
        git push --set-upstream origin $BranchName
        if ($?) {
          $DefaultBranch=(gh repo view --json defaultBranchRef --jq .defaultBranchRef.name)
          Write-Output($Body) | Out-File pr.txt
          gh pr create --label 'ci/di' --title "Update deps #$($LastBranchNumber)" -F pr.txt
        }
#        date > generated.txt
  #        git config user.name github-actions
  #        git config user.email github-actions@github.com
  #        git pull
  #        git branch -ar --no-color --no-column --list '*update/deps-*'
  #        NUMBER=$(git branch -ar --no-color --no-column --list '*update/deps-*' | sed "s/[^0-9]//g" | sort -r | head -1)
  #        echo $NUMBER
  #        NUMBER=$(($NUMBER + 1))
  #        BRANCH_NAME="update/deps-$NUMBER"
  #        git checkout -b $BRANCH_NAME
  #        git add .
  #        git commit -m "Dependencies auto update"
  #        git push --set-upstream origin $BRANCH_NAME
  #        DEFAULT_BRANCH=(gh repo view --json defaultBranchRef --jq .defaultBranchRef.name)
  #        (echo $NUMBER | sed "s/;/\n/g") > gh pr create --label 'ci/di' --assignee @me --base "$DEFAULT_BRANCH" --title "Update deps #$NUMBER" --body-file -


#    - name: GitHub runner version was updated
#      if: ${{ steps.run-check-for-updates.outputs.gh_runner_new_version != inputs.gh_version }}
#      env:
#        GITHUB_TOKEN: ${{ inputs.gh_token }}
#        GH_RUNNER_NEW_VERSION: ${{ steps.commit-if-updated.outputs.gh_runner_new_version }}
#      shell: bash
#      run: |
#        gh variable set GH_RUNNER_VERSION -b ${{ env.GH_RUNNER_NEW_VERSION }} -R ${{ github.repository }}

    - name: Dependencies was updated
      id: prepare-for-output
      if: ${{ always() && steps.run-check-for-updates.outputs.files_changed == 1 }}
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
        NEW_VERSION: ${{ steps.run-check-for-updates.outputs.gh_runner_new_version }}
        CURRENT_VERSION: ${{ inputs.gh_version }}
      shell: pwsh
      run: |
        $NewVersion = (([string]::IsNullOrWhitespace($env:NEW_VERSION)) ? $env:CURRENT_VERSION : $env:NEW_VERSION)
        Write-Output "version=$NewVersion" >> $env:GITHUB_OUTPUT
#        Write-Output "counter=$Counter" >> $env:GITHUB_OUTPUT
#        gh variable set DEPS_UPDATE_COUNTER -b $Counter -R '${{ github.repository }}'
#        gh variable set GH_RUNNER_VERSION -b "$NewVersion" -R '${{ github.repository }}'
